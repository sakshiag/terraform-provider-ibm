// Code generated by go-swagger; DO NOT EDIT.

package compute

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.ibm.com/riaas/rias-api/riaas/models"
)

// GetServersServerIDNetworkInterfacesIDReader is a Reader for the GetServersServerIDNetworkInterfacesID structure.
type GetServersServerIDNetworkInterfacesIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServersServerIDNetworkInterfacesIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetServersServerIDNetworkInterfacesIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetServersServerIDNetworkInterfacesIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetServersServerIDNetworkInterfacesIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		
		return nil, result
	}
}

// NewGetServersServerIDNetworkInterfacesIDOK creates a GetServersServerIDNetworkInterfacesIDOK with default headers values
func NewGetServersServerIDNetworkInterfacesIDOK() *GetServersServerIDNetworkInterfacesIDOK {
	return &GetServersServerIDNetworkInterfacesIDOK{}
}

/*GetServersServerIDNetworkInterfacesIDOK handles this case with default header values.

dummy
*/
type GetServersServerIDNetworkInterfacesIDOK struct {
	Payload *models.ServerNetworkInterface
}

func (o *GetServersServerIDNetworkInterfacesIDOK) Error() string {
	return fmt.Sprintf("[GET /servers/{server_id}/network_interfaces/{id}][%d] getServersServerIdNetworkInterfacesIdOK  %+v", 200, o.Payload)
}

func (o *GetServersServerIDNetworkInterfacesIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerNetworkInterface)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServersServerIDNetworkInterfacesIDNotFound creates a GetServersServerIDNetworkInterfacesIDNotFound with default headers values
func NewGetServersServerIDNetworkInterfacesIDNotFound() *GetServersServerIDNetworkInterfacesIDNotFound {
	return &GetServersServerIDNetworkInterfacesIDNotFound{}
}

/*GetServersServerIDNetworkInterfacesIDNotFound handles this case with default header values.

error
*/
type GetServersServerIDNetworkInterfacesIDNotFound struct {
	Payload *models.Riaaserror
}

func (o *GetServersServerIDNetworkInterfacesIDNotFound) Error() string {
	return fmt.Sprintf("[GET /servers/{server_id}/network_interfaces/{id}][%d] getServersServerIdNetworkInterfacesIdNotFound  %+v", 404, o.Payload)
}

func (o *GetServersServerIDNetworkInterfacesIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServersServerIDNetworkInterfacesIDDefault creates a GetServersServerIDNetworkInterfacesIDDefault with default headers values
func NewGetServersServerIDNetworkInterfacesIDDefault(code int) *GetServersServerIDNetworkInterfacesIDDefault {
	return &GetServersServerIDNetworkInterfacesIDDefault{
		_statusCode: code,
	}
}

/*GetServersServerIDNetworkInterfacesIDDefault handles this case with default header values.

unexpectederror
*/
type GetServersServerIDNetworkInterfacesIDDefault struct {
	_statusCode int

	Payload *models.Riaaserror
}

// Code gets the status code for the get servers server ID network interfaces ID default response
func (o *GetServersServerIDNetworkInterfacesIDDefault) Code() int {
	return o._statusCode
}

func (o *GetServersServerIDNetworkInterfacesIDDefault) Error() string {
	return fmt.Sprintf("[GET /servers/{server_id}/network_interfaces/{id}][%d] GetServersServerIDNetworkInterfacesID default  %+v", o._statusCode, o.Payload)
}

func (o *GetServersServerIDNetworkInterfacesIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
