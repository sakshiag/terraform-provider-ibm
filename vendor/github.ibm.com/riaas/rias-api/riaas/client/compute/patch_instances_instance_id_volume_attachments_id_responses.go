// Code generated by go-swagger; DO NOT EDIT.

package compute

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.ibm.com/riaas/rias-api/riaas/models"
)

// PatchInstancesInstanceIDVolumeAttachmentsIDReader is a Reader for the PatchInstancesInstanceIDVolumeAttachmentsID structure.
type PatchInstancesInstanceIDVolumeAttachmentsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchInstancesInstanceIDVolumeAttachmentsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPatchInstancesInstanceIDVolumeAttachmentsIDCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPatchInstancesInstanceIDVolumeAttachmentsIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchInstancesInstanceIDVolumeAttachmentsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPatchInstancesInstanceIDVolumeAttachmentsIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		
		return nil, result
	}
}

// NewPatchInstancesInstanceIDVolumeAttachmentsIDCreated creates a PatchInstancesInstanceIDVolumeAttachmentsIDCreated with default headers values
func NewPatchInstancesInstanceIDVolumeAttachmentsIDCreated() *PatchInstancesInstanceIDVolumeAttachmentsIDCreated {
	return &PatchInstancesInstanceIDVolumeAttachmentsIDCreated{}
}

/*PatchInstancesInstanceIDVolumeAttachmentsIDCreated handles this case with default header values.

dummy
*/
type PatchInstancesInstanceIDVolumeAttachmentsIDCreated struct {
	Payload *models.InstanceVolumeAttachment
}

func (o *PatchInstancesInstanceIDVolumeAttachmentsIDCreated) Error() string {
	return fmt.Sprintf("[PATCH /instances/{instance_id}/volume_attachments/{id}][%d] patchInstancesInstanceIdVolumeAttachmentsIdCreated  %+v", 201, o.Payload)
}

func (o *PatchInstancesInstanceIDVolumeAttachmentsIDCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InstanceVolumeAttachment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchInstancesInstanceIDVolumeAttachmentsIDBadRequest creates a PatchInstancesInstanceIDVolumeAttachmentsIDBadRequest with default headers values
func NewPatchInstancesInstanceIDVolumeAttachmentsIDBadRequest() *PatchInstancesInstanceIDVolumeAttachmentsIDBadRequest {
	return &PatchInstancesInstanceIDVolumeAttachmentsIDBadRequest{}
}

/*PatchInstancesInstanceIDVolumeAttachmentsIDBadRequest handles this case with default header values.

error
*/
type PatchInstancesInstanceIDVolumeAttachmentsIDBadRequest struct {
	Payload *models.Riaaserror
}

func (o *PatchInstancesInstanceIDVolumeAttachmentsIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /instances/{instance_id}/volume_attachments/{id}][%d] patchInstancesInstanceIdVolumeAttachmentsIdBadRequest  %+v", 400, o.Payload)
}

func (o *PatchInstancesInstanceIDVolumeAttachmentsIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchInstancesInstanceIDVolumeAttachmentsIDNotFound creates a PatchInstancesInstanceIDVolumeAttachmentsIDNotFound with default headers values
func NewPatchInstancesInstanceIDVolumeAttachmentsIDNotFound() *PatchInstancesInstanceIDVolumeAttachmentsIDNotFound {
	return &PatchInstancesInstanceIDVolumeAttachmentsIDNotFound{}
}

/*PatchInstancesInstanceIDVolumeAttachmentsIDNotFound handles this case with default header values.

error
*/
type PatchInstancesInstanceIDVolumeAttachmentsIDNotFound struct {
	Payload *models.Riaaserror
}

func (o *PatchInstancesInstanceIDVolumeAttachmentsIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /instances/{instance_id}/volume_attachments/{id}][%d] patchInstancesInstanceIdVolumeAttachmentsIdNotFound  %+v", 404, o.Payload)
}

func (o *PatchInstancesInstanceIDVolumeAttachmentsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchInstancesInstanceIDVolumeAttachmentsIDDefault creates a PatchInstancesInstanceIDVolumeAttachmentsIDDefault with default headers values
func NewPatchInstancesInstanceIDVolumeAttachmentsIDDefault(code int) *PatchInstancesInstanceIDVolumeAttachmentsIDDefault {
	return &PatchInstancesInstanceIDVolumeAttachmentsIDDefault{
		_statusCode: code,
	}
}

/*PatchInstancesInstanceIDVolumeAttachmentsIDDefault handles this case with default header values.

unexpectederror
*/
type PatchInstancesInstanceIDVolumeAttachmentsIDDefault struct {
	_statusCode int

	Payload *models.Riaaserror
}

// Code gets the status code for the patch instances instance ID volume attachments ID default response
func (o *PatchInstancesInstanceIDVolumeAttachmentsIDDefault) Code() int {
	return o._statusCode
}

func (o *PatchInstancesInstanceIDVolumeAttachmentsIDDefault) Error() string {
	return fmt.Sprintf("[PATCH /instances/{instance_id}/volume_attachments/{id}][%d] PatchInstancesInstanceIDVolumeAttachmentsID default  %+v", o._statusCode, o.Payload)
}

func (o *PatchInstancesInstanceIDVolumeAttachmentsIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
