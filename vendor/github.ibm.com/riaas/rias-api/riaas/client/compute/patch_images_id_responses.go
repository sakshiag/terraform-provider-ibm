// Code generated by go-swagger; DO NOT EDIT.

package compute

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.ibm.com/riaas/rias-api/riaas/models"
)

// PatchImagesIDReader is a Reader for the PatchImagesID structure.
type PatchImagesIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchImagesIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPatchImagesIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPatchImagesIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchImagesIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPatchImagesIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		
		return nil, result
	}
}

// NewPatchImagesIDOK creates a PatchImagesIDOK with default headers values
func NewPatchImagesIDOK() *PatchImagesIDOK {
	return &PatchImagesIDOK{}
}

/*PatchImagesIDOK handles this case with default header values.

dummy
*/
type PatchImagesIDOK struct {
	/*Upload URL for image file
	 */
	Location string

	Payload *models.Image
}

func (o *PatchImagesIDOK) Error() string {
	return fmt.Sprintf("[PATCH /images/{id}][%d] patchImagesIdOK  %+v", 200, o.Payload)
}

func (o *PatchImagesIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	o.Payload = new(models.Image)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchImagesIDBadRequest creates a PatchImagesIDBadRequest with default headers values
func NewPatchImagesIDBadRequest() *PatchImagesIDBadRequest {
	return &PatchImagesIDBadRequest{}
}

/*PatchImagesIDBadRequest handles this case with default header values.

error
*/
type PatchImagesIDBadRequest struct {
	Payload *models.Riaaserror
}

func (o *PatchImagesIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /images/{id}][%d] patchImagesIdBadRequest  %+v", 400, o.Payload)
}

func (o *PatchImagesIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchImagesIDNotFound creates a PatchImagesIDNotFound with default headers values
func NewPatchImagesIDNotFound() *PatchImagesIDNotFound {
	return &PatchImagesIDNotFound{}
}

/*PatchImagesIDNotFound handles this case with default header values.

error
*/
type PatchImagesIDNotFound struct {
	Payload *models.Riaaserror
}

func (o *PatchImagesIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /images/{id}][%d] patchImagesIdNotFound  %+v", 404, o.Payload)
}

func (o *PatchImagesIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchImagesIDDefault creates a PatchImagesIDDefault with default headers values
func NewPatchImagesIDDefault(code int) *PatchImagesIDDefault {
	return &PatchImagesIDDefault{
		_statusCode: code,
	}
}

/*PatchImagesIDDefault handles this case with default header values.

unexpectederror
*/
type PatchImagesIDDefault struct {
	_statusCode int

	Payload *models.Riaaserror
}

// Code gets the status code for the patch images ID default response
func (o *PatchImagesIDDefault) Code() int {
	return o._statusCode
}

func (o *PatchImagesIDDefault) Error() string {
	return fmt.Sprintf("[PATCH /images/{id}][%d] PatchImagesID default  %+v", o._statusCode, o.Payload)
}

func (o *PatchImagesIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
