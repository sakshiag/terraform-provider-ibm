// Code generated by go-swagger; DO NOT EDIT.

package compute

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.ibm.com/riaas/rias-api/riaas/models"
)

// PostServersReader is a Reader for the PostServers structure.
type PostServersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostServersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostServersCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostServersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPostServersDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		
		return nil, result
	}
}

// NewPostServersCreated creates a PostServersCreated with default headers values
func NewPostServersCreated() *PostServersCreated {
	return &PostServersCreated{}
}

/*PostServersCreated handles this case with default header values.

dummy
*/
type PostServersCreated struct {
	Payload *models.Server
}

func (o *PostServersCreated) Error() string {
	return fmt.Sprintf("[POST /servers][%d] postServersCreated  %+v", 201, o.Payload)
}

func (o *PostServersCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Server)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostServersBadRequest creates a PostServersBadRequest with default headers values
func NewPostServersBadRequest() *PostServersBadRequest {
	return &PostServersBadRequest{}
}

/*PostServersBadRequest handles this case with default header values.

error
*/
type PostServersBadRequest struct {
	Payload *models.Riaaserror
}

func (o *PostServersBadRequest) Error() string {
	return fmt.Sprintf("[POST /servers][%d] postServersBadRequest  %+v", 400, o.Payload)
}

func (o *PostServersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostServersDefault creates a PostServersDefault with default headers values
func NewPostServersDefault(code int) *PostServersDefault {
	return &PostServersDefault{
		_statusCode: code,
	}
}

/*PostServersDefault handles this case with default header values.

unexpectederror
*/
type PostServersDefault struct {
	_statusCode int

	Payload *models.Riaaserror
}

// Code gets the status code for the post servers default response
func (o *PostServersDefault) Code() int {
	return o._statusCode
}

func (o *PostServersDefault) Error() string {
	return fmt.Sprintf("[POST /servers][%d] PostServers default  %+v", o._statusCode, o.Payload)
}

func (o *PostServersDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
