// Code generated by go-swagger; DO NOT EDIT.

package compute

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.ibm.com/riaas/rias-api/riaas/models"
)

// GetServersServerIDActionsIDReader is a Reader for the GetServersServerIDActionsID structure.
type GetServersServerIDActionsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServersServerIDActionsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetServersServerIDActionsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetServersServerIDActionsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetServersServerIDActionsIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		
		return nil, result
	}
}

// NewGetServersServerIDActionsIDOK creates a GetServersServerIDActionsIDOK with default headers values
func NewGetServersServerIDActionsIDOK() *GetServersServerIDActionsIDOK {
	return &GetServersServerIDActionsIDOK{}
}

/*GetServersServerIDActionsIDOK handles this case with default header values.

dummy
*/
type GetServersServerIDActionsIDOK struct {
	Payload *models.ServerAction
}

func (o *GetServersServerIDActionsIDOK) Error() string {
	return fmt.Sprintf("[GET /servers/{server_id}/actions/{id}][%d] getServersServerIdActionsIdOK  %+v", 200, o.Payload)
}

func (o *GetServersServerIDActionsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerAction)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServersServerIDActionsIDNotFound creates a GetServersServerIDActionsIDNotFound with default headers values
func NewGetServersServerIDActionsIDNotFound() *GetServersServerIDActionsIDNotFound {
	return &GetServersServerIDActionsIDNotFound{}
}

/*GetServersServerIDActionsIDNotFound handles this case with default header values.

error
*/
type GetServersServerIDActionsIDNotFound struct {
	Payload *models.Riaaserror
}

func (o *GetServersServerIDActionsIDNotFound) Error() string {
	return fmt.Sprintf("[GET /servers/{server_id}/actions/{id}][%d] getServersServerIdActionsIdNotFound  %+v", 404, o.Payload)
}

func (o *GetServersServerIDActionsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServersServerIDActionsIDDefault creates a GetServersServerIDActionsIDDefault with default headers values
func NewGetServersServerIDActionsIDDefault(code int) *GetServersServerIDActionsIDDefault {
	return &GetServersServerIDActionsIDDefault{
		_statusCode: code,
	}
}

/*GetServersServerIDActionsIDDefault handles this case with default header values.

unexpectederror
*/
type GetServersServerIDActionsIDDefault struct {
	_statusCode int

	Payload *models.Riaaserror
}

// Code gets the status code for the get servers server ID actions ID default response
func (o *GetServersServerIDActionsIDDefault) Code() int {
	return o._statusCode
}

func (o *GetServersServerIDActionsIDDefault) Error() string {
	return fmt.Sprintf("[GET /servers/{server_id}/actions/{id}][%d] GetServersServerIDActionsID default  %+v", o._statusCode, o.Payload)
}

func (o *GetServersServerIDActionsIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
