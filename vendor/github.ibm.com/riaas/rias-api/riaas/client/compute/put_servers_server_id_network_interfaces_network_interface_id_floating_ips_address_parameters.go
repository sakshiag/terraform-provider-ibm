// Code generated by go-swagger; DO NOT EDIT.

package compute

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams creates a new PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams object
// with the default values initialized.
func NewPutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams() *PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams {
	var ()
	return &PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParamsWithTimeout creates a new PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParamsWithTimeout(timeout time.Duration) *PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams {
	var ()
	return &PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams{

		timeout: timeout,
	}
}

// NewPutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParamsWithContext creates a new PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParamsWithContext(ctx context.Context) *PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams {
	var ()
	return &PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams{

		Context: ctx,
	}
}

// NewPutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParamsWithHTTPClient creates a new PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParamsWithHTTPClient(client *http.Client) *PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams {
	var ()
	return &PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams{
		HTTPClient: client,
	}
}

/*PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams contains all the parameters to send to the API endpoint
for the put servers server ID network interfaces network interface ID floating ips address operation typically these are written to a http.Request
*/
type PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams struct {

	/*Address
	  The floating IP address

	*/
	Address string
	/*NetworkInterfaceID
	  The network interface identifier

	*/
	NetworkInterfaceID string
	/*ServerID
	  The server identifier

	*/
	ServerID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put servers server ID network interfaces network interface ID floating ips address params
func (o *PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams) WithTimeout(timeout time.Duration) *PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put servers server ID network interfaces network interface ID floating ips address params
func (o *PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put servers server ID network interfaces network interface ID floating ips address params
func (o *PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams) WithContext(ctx context.Context) *PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put servers server ID network interfaces network interface ID floating ips address params
func (o *PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put servers server ID network interfaces network interface ID floating ips address params
func (o *PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams) WithHTTPClient(client *http.Client) *PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put servers server ID network interfaces network interface ID floating ips address params
func (o *PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAddress adds the address to the put servers server ID network interfaces network interface ID floating ips address params
func (o *PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams) WithAddress(address string) *PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams {
	o.SetAddress(address)
	return o
}

// SetAddress adds the address to the put servers server ID network interfaces network interface ID floating ips address params
func (o *PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams) SetAddress(address string) {
	o.Address = address
}

// WithNetworkInterfaceID adds the networkInterfaceID to the put servers server ID network interfaces network interface ID floating ips address params
func (o *PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams) WithNetworkInterfaceID(networkInterfaceID string) *PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams {
	o.SetNetworkInterfaceID(networkInterfaceID)
	return o
}

// SetNetworkInterfaceID adds the networkInterfaceId to the put servers server ID network interfaces network interface ID floating ips address params
func (o *PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams) SetNetworkInterfaceID(networkInterfaceID string) {
	o.NetworkInterfaceID = networkInterfaceID
}

// WithServerID adds the serverID to the put servers server ID network interfaces network interface ID floating ips address params
func (o *PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams) WithServerID(serverID string) *PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams {
	o.SetServerID(serverID)
	return o
}

// SetServerID adds the serverId to the put servers server ID network interfaces network interface ID floating ips address params
func (o *PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams) SetServerID(serverID string) {
	o.ServerID = serverID
}

// WriteToRequest writes these params to a swagger request
func (o *PutServersServerIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param address
	if err := r.SetPathParam("address", o.Address); err != nil {
		return err
	}

	// path param network_interface_id
	if err := r.SetPathParam("network_interface_id", o.NetworkInterfaceID); err != nil {
		return err
	}

	// path param server_id
	if err := r.SetPathParam("server_id", o.ServerID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
