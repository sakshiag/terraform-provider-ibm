// Code generated by go-swagger; DO NOT EDIT.

package compute

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.ibm.com/riaas/rias-api/riaas/models"
)

// PostImagesReader is a Reader for the PostImages structure.
type PostImagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostImagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostImagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostImagesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPostImagesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		
		return nil, result
	}
}

// NewPostImagesOK creates a PostImagesOK with default headers values
func NewPostImagesOK() *PostImagesOK {
	return &PostImagesOK{}
}

/*PostImagesOK handles this case with default header values.

dummy
*/
type PostImagesOK struct {
	/*Upload URL for image file
	 */
	Location string

	Payload *models.Image
}

func (o *PostImagesOK) Error() string {
	return fmt.Sprintf("[POST /images][%d] postImagesOK  %+v", 200, o.Payload)
}

func (o *PostImagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	o.Payload = new(models.Image)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostImagesBadRequest creates a PostImagesBadRequest with default headers values
func NewPostImagesBadRequest() *PostImagesBadRequest {
	return &PostImagesBadRequest{}
}

/*PostImagesBadRequest handles this case with default header values.

error
*/
type PostImagesBadRequest struct {
	Payload *models.Riaaserror
}

func (o *PostImagesBadRequest) Error() string {
	return fmt.Sprintf("[POST /images][%d] postImagesBadRequest  %+v", 400, o.Payload)
}

func (o *PostImagesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostImagesDefault creates a PostImagesDefault with default headers values
func NewPostImagesDefault(code int) *PostImagesDefault {
	return &PostImagesDefault{
		_statusCode: code,
	}
}

/*PostImagesDefault handles this case with default header values.

unexpectederror
*/
type PostImagesDefault struct {
	_statusCode int

	Payload *models.Riaaserror
}

// Code gets the status code for the post images default response
func (o *PostImagesDefault) Code() int {
	return o._statusCode
}

func (o *PostImagesDefault) Error() string {
	return fmt.Sprintf("[POST /images][%d] PostImages default  %+v", o._statusCode, o.Payload)
}

func (o *PostImagesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
