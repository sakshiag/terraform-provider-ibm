// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams creates a new DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams object
// with the default values initialized.
func NewDeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams() *DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams {
	var ()
	return &DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteVolumesVolumeIDSnapshotsIDTagsTagNameParamsWithTimeout creates a new DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteVolumesVolumeIDSnapshotsIDTagsTagNameParamsWithTimeout(timeout time.Duration) *DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams {
	var ()
	return &DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams{

		timeout: timeout,
	}
}

// NewDeleteVolumesVolumeIDSnapshotsIDTagsTagNameParamsWithContext creates a new DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteVolumesVolumeIDSnapshotsIDTagsTagNameParamsWithContext(ctx context.Context) *DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams {
	var ()
	return &DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams{

		Context: ctx,
	}
}

// NewDeleteVolumesVolumeIDSnapshotsIDTagsTagNameParamsWithHTTPClient creates a new DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteVolumesVolumeIDSnapshotsIDTagsTagNameParamsWithHTTPClient(client *http.Client) *DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams {
	var ()
	return &DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams{
		HTTPClient: client,
	}
}

/*DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams contains all the parameters to send to the API endpoint
for the delete volumes volume ID snapshots ID tags tag name operation typically these are written to a http.Request
*/
type DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams struct {

	/*ID
	  The resource identifier

	*/
	ID string
	/*TagName
	  The name of the tag

	*/
	TagName string
	/*VolumeID
	  The volume identifier

	*/
	VolumeID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete volumes volume ID snapshots ID tags tag name params
func (o *DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams) WithTimeout(timeout time.Duration) *DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete volumes volume ID snapshots ID tags tag name params
func (o *DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete volumes volume ID snapshots ID tags tag name params
func (o *DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams) WithContext(ctx context.Context) *DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete volumes volume ID snapshots ID tags tag name params
func (o *DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete volumes volume ID snapshots ID tags tag name params
func (o *DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams) WithHTTPClient(client *http.Client) *DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete volumes volume ID snapshots ID tags tag name params
func (o *DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the delete volumes volume ID snapshots ID tags tag name params
func (o *DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams) WithID(id string) *DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the delete volumes volume ID snapshots ID tags tag name params
func (o *DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams) SetID(id string) {
	o.ID = id
}

// WithTagName adds the tagName to the delete volumes volume ID snapshots ID tags tag name params
func (o *DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams) WithTagName(tagName string) *DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams {
	o.SetTagName(tagName)
	return o
}

// SetTagName adds the tagName to the delete volumes volume ID snapshots ID tags tag name params
func (o *DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams) SetTagName(tagName string) {
	o.TagName = tagName
}

// WithVolumeID adds the volumeID to the delete volumes volume ID snapshots ID tags tag name params
func (o *DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams) WithVolumeID(volumeID string) *DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams {
	o.SetVolumeID(volumeID)
	return o
}

// SetVolumeID adds the volumeId to the delete volumes volume ID snapshots ID tags tag name params
func (o *DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams) SetVolumeID(volumeID string) {
	o.VolumeID = volumeID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteVolumesVolumeIDSnapshotsIDTagsTagNameParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param tag_name
	if err := r.SetPathParam("tag_name", o.TagName); err != nil {
		return err
	}

	// path param volume_id
	if err := r.SetPathParam("volume_id", o.VolumeID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
