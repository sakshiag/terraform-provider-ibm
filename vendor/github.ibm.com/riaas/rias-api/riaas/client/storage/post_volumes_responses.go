// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.ibm.com/riaas/rias-api/riaas/models"
)

// PostVolumesReader is a Reader for the PostVolumes structure.
type PostVolumesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostVolumesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostVolumesCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostVolumesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPostVolumesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		
		return nil, result
	}
}

// NewPostVolumesCreated creates a PostVolumesCreated with default headers values
func NewPostVolumesCreated() *PostVolumesCreated {
	return &PostVolumesCreated{}
}

/*PostVolumesCreated handles this case with default header values.

dummy
*/
type PostVolumesCreated struct {
	Payload *models.Volume
}

func (o *PostVolumesCreated) Error() string {
	return fmt.Sprintf("[POST /volumes][%d] postVolumesCreated  %+v", 201, o.Payload)
}

func (o *PostVolumesCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Volume)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostVolumesBadRequest creates a PostVolumesBadRequest with default headers values
func NewPostVolumesBadRequest() *PostVolumesBadRequest {
	return &PostVolumesBadRequest{}
}

/*PostVolumesBadRequest handles this case with default header values.

error
*/
type PostVolumesBadRequest struct {
	Payload *models.Riaaserror
}

func (o *PostVolumesBadRequest) Error() string {
	return fmt.Sprintf("[POST /volumes][%d] postVolumesBadRequest  %+v", 400, o.Payload)
}

func (o *PostVolumesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostVolumesDefault creates a PostVolumesDefault with default headers values
func NewPostVolumesDefault(code int) *PostVolumesDefault {
	return &PostVolumesDefault{
		_statusCode: code,
	}
}

/*PostVolumesDefault handles this case with default header values.

unexpectederror
*/
type PostVolumesDefault struct {
	_statusCode int

	Payload *models.Riaaserror
}

// Code gets the status code for the post volumes default response
func (o *PostVolumesDefault) Code() int {
	return o._statusCode
}

func (o *PostVolumesDefault) Error() string {
	return fmt.Sprintf("[POST /volumes][%d] PostVolumes default  %+v", o._statusCode, o.Payload)
}

func (o *PostVolumesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
