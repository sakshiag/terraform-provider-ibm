// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.ibm.com/riaas/rias-api/riaas/models"
)

// PatchVolumesIDReader is a Reader for the PatchVolumesID structure.
type PatchVolumesIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchVolumesIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPatchVolumesIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPatchVolumesIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchVolumesIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPatchVolumesIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchVolumesIDOK creates a PatchVolumesIDOK with default headers values
func NewPatchVolumesIDOK() *PatchVolumesIDOK {
	return &PatchVolumesIDOK{}
}

/*PatchVolumesIDOK handles this case with default header values.

dummy
*/
type PatchVolumesIDOK struct {
	Payload *models.Volume
}

func (o *PatchVolumesIDOK) Error() string {
	return fmt.Sprintf("[PATCH /volumes/{id}][%d] patchVolumesIdOK  %+v", 200, o.Payload)
}

func (o *PatchVolumesIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Volume)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchVolumesIDBadRequest creates a PatchVolumesIDBadRequest with default headers values
func NewPatchVolumesIDBadRequest() *PatchVolumesIDBadRequest {
	return &PatchVolumesIDBadRequest{}
}

/*PatchVolumesIDBadRequest handles this case with default header values.

error
*/
type PatchVolumesIDBadRequest struct {
	Payload *models.Riaaserror
}

func (o *PatchVolumesIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /volumes/{id}][%d] patchVolumesIdBadRequest  %+v", 400, o.Payload)
}

func (o *PatchVolumesIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchVolumesIDNotFound creates a PatchVolumesIDNotFound with default headers values
func NewPatchVolumesIDNotFound() *PatchVolumesIDNotFound {
	return &PatchVolumesIDNotFound{}
}

/*PatchVolumesIDNotFound handles this case with default header values.

error
*/
type PatchVolumesIDNotFound struct {
	Payload *models.Riaaserror
}

func (o *PatchVolumesIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /volumes/{id}][%d] patchVolumesIdNotFound  %+v", 404, o.Payload)
}

func (o *PatchVolumesIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchVolumesIDInternalServerError creates a PatchVolumesIDInternalServerError with default headers values
func NewPatchVolumesIDInternalServerError() *PatchVolumesIDInternalServerError {
	return &PatchVolumesIDInternalServerError{}
}

/*PatchVolumesIDInternalServerError handles this case with default header values.

error
*/
type PatchVolumesIDInternalServerError struct {
	Payload *models.Riaaserror
}

func (o *PatchVolumesIDInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /volumes/{id}][%d] patchVolumesIdInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchVolumesIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
