// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.ibm.com/riaas/rias-api/riaas/models"
)

// GetVolumesIDReader is a Reader for the GetVolumesID structure.
type GetVolumesIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVolumesIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetVolumesIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetVolumesIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetVolumesIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		
		return nil, result
	}
}

// NewGetVolumesIDOK creates a GetVolumesIDOK with default headers values
func NewGetVolumesIDOK() *GetVolumesIDOK {
	return &GetVolumesIDOK{}
}

/*GetVolumesIDOK handles this case with default header values.

dummy
*/
type GetVolumesIDOK struct {
	Payload *models.VolumeExtended
}

func (o *GetVolumesIDOK) Error() string {
	return fmt.Sprintf("[GET /volumes/{id}][%d] getVolumesIdOK  %+v", 200, o.Payload)
}

func (o *GetVolumesIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VolumeExtended)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVolumesIDNotFound creates a GetVolumesIDNotFound with default headers values
func NewGetVolumesIDNotFound() *GetVolumesIDNotFound {
	return &GetVolumesIDNotFound{}
}

/*GetVolumesIDNotFound handles this case with default header values.

error
*/
type GetVolumesIDNotFound struct {
	Payload *models.Riaaserror
}

func (o *GetVolumesIDNotFound) Error() string {
	return fmt.Sprintf("[GET /volumes/{id}][%d] getVolumesIdNotFound  %+v", 404, o.Payload)
}

func (o *GetVolumesIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVolumesIDDefault creates a GetVolumesIDDefault with default headers values
func NewGetVolumesIDDefault(code int) *GetVolumesIDDefault {
	return &GetVolumesIDDefault{
		_statusCode: code,
	}
}

/*GetVolumesIDDefault handles this case with default header values.

unexpectederror
*/
type GetVolumesIDDefault struct {
	_statusCode int

	Payload *models.Riaaserror
}

// Code gets the status code for the get volumes ID default response
func (o *GetVolumesIDDefault) Code() int {
	return o._statusCode
}

func (o *GetVolumesIDDefault) Error() string {
	return fmt.Sprintf("[GET /volumes/{id}][%d] GetVolumesID default  %+v", o._statusCode, o.Payload)
}

func (o *GetVolumesIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
