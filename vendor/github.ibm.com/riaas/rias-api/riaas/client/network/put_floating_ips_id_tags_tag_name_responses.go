// Code generated by go-swagger; DO NOT EDIT.

package network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.ibm.com/riaas/rias-api/riaas/models"
)

// PutFloatingIpsIDTagsTagNameReader is a Reader for the PutFloatingIpsIDTagsTagName structure.
type PutFloatingIpsIDTagsTagNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutFloatingIpsIDTagsTagNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewPutFloatingIpsIDTagsTagNameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutFloatingIpsIDTagsTagNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutFloatingIpsIDTagsTagNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPutFloatingIpsIDTagsTagNameDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		
		return nil, result
	}
}

// NewPutFloatingIpsIDTagsTagNameNoContent creates a PutFloatingIpsIDTagsTagNameNoContent with default headers values
func NewPutFloatingIpsIDTagsTagNameNoContent() *PutFloatingIpsIDTagsTagNameNoContent {
	return &PutFloatingIpsIDTagsTagNameNoContent{}
}

/*PutFloatingIpsIDTagsTagNameNoContent handles this case with default header values.

error
*/
type PutFloatingIpsIDTagsTagNameNoContent struct {
	Payload *models.Riaaserror
}

func (o *PutFloatingIpsIDTagsTagNameNoContent) Error() string {
	return fmt.Sprintf("[PUT /floating_ips/{id}/tags/{tag_name}][%d] putFloatingIpsIdTagsTagNameNoContent  %+v", 204, o.Payload)
}

func (o *PutFloatingIpsIDTagsTagNameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFloatingIpsIDTagsTagNameBadRequest creates a PutFloatingIpsIDTagsTagNameBadRequest with default headers values
func NewPutFloatingIpsIDTagsTagNameBadRequest() *PutFloatingIpsIDTagsTagNameBadRequest {
	return &PutFloatingIpsIDTagsTagNameBadRequest{}
}

/*PutFloatingIpsIDTagsTagNameBadRequest handles this case with default header values.

error
*/
type PutFloatingIpsIDTagsTagNameBadRequest struct {
	Payload *models.Riaaserror
}

func (o *PutFloatingIpsIDTagsTagNameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /floating_ips/{id}/tags/{tag_name}][%d] putFloatingIpsIdTagsTagNameBadRequest  %+v", 400, o.Payload)
}

func (o *PutFloatingIpsIDTagsTagNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFloatingIpsIDTagsTagNameNotFound creates a PutFloatingIpsIDTagsTagNameNotFound with default headers values
func NewPutFloatingIpsIDTagsTagNameNotFound() *PutFloatingIpsIDTagsTagNameNotFound {
	return &PutFloatingIpsIDTagsTagNameNotFound{}
}

/*PutFloatingIpsIDTagsTagNameNotFound handles this case with default header values.

error
*/
type PutFloatingIpsIDTagsTagNameNotFound struct {
	Payload *models.Riaaserror
}

func (o *PutFloatingIpsIDTagsTagNameNotFound) Error() string {
	return fmt.Sprintf("[PUT /floating_ips/{id}/tags/{tag_name}][%d] putFloatingIpsIdTagsTagNameNotFound  %+v", 404, o.Payload)
}

func (o *PutFloatingIpsIDTagsTagNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFloatingIpsIDTagsTagNameDefault creates a PutFloatingIpsIDTagsTagNameDefault with default headers values
func NewPutFloatingIpsIDTagsTagNameDefault(code int) *PutFloatingIpsIDTagsTagNameDefault {
	return &PutFloatingIpsIDTagsTagNameDefault{
		_statusCode: code,
	}
}

/*PutFloatingIpsIDTagsTagNameDefault handles this case with default header values.

unexpectederror
*/
type PutFloatingIpsIDTagsTagNameDefault struct {
	_statusCode int

	Payload *models.Riaaserror
}

// Code gets the status code for the put floating ips ID tags tag name default response
func (o *PutFloatingIpsIDTagsTagNameDefault) Code() int {
	return o._statusCode
}

func (o *PutFloatingIpsIDTagsTagNameDefault) Error() string {
	return fmt.Sprintf("[PUT /floating_ips/{id}/tags/{tag_name}][%d] PutFloatingIpsIDTagsTagName default  %+v", o._statusCode, o.Payload)
}

func (o *PutFloatingIpsIDTagsTagNameDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
