// Code generated by go-swagger; DO NOT EDIT.

package network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.ibm.com/riaas/rias-api/riaas/models"
)

// PatchVpcsIDReader is a Reader for the PatchVpcsID structure.
type PatchVpcsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchVpcsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPatchVpcsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPatchVpcsIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchVpcsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPatchVpcsIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		
		return nil, result
	}
}

// NewPatchVpcsIDOK creates a PatchVpcsIDOK with default headers values
func NewPatchVpcsIDOK() *PatchVpcsIDOK {
	return &PatchVpcsIDOK{}
}

/*PatchVpcsIDOK handles this case with default header values.

dummy
*/
type PatchVpcsIDOK struct {
	Payload *models.Vpc
}

func (o *PatchVpcsIDOK) Error() string {
	return fmt.Sprintf("[PATCH /vpcs/{id}][%d] patchVpcsIdOK  %+v", 200, o.Payload)
}

func (o *PatchVpcsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Vpc)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchVpcsIDBadRequest creates a PatchVpcsIDBadRequest with default headers values
func NewPatchVpcsIDBadRequest() *PatchVpcsIDBadRequest {
	return &PatchVpcsIDBadRequest{}
}

/*PatchVpcsIDBadRequest handles this case with default header values.

error
*/
type PatchVpcsIDBadRequest struct {
	Payload *models.Riaaserror
}

func (o *PatchVpcsIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /vpcs/{id}][%d] patchVpcsIdBadRequest  %+v", 400, o.Payload)
}

func (o *PatchVpcsIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchVpcsIDNotFound creates a PatchVpcsIDNotFound with default headers values
func NewPatchVpcsIDNotFound() *PatchVpcsIDNotFound {
	return &PatchVpcsIDNotFound{}
}

/*PatchVpcsIDNotFound handles this case with default header values.

error
*/
type PatchVpcsIDNotFound struct {
	Payload *models.Riaaserror
}

func (o *PatchVpcsIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /vpcs/{id}][%d] patchVpcsIdNotFound  %+v", 404, o.Payload)
}

func (o *PatchVpcsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchVpcsIDDefault creates a PatchVpcsIDDefault with default headers values
func NewPatchVpcsIDDefault(code int) *PatchVpcsIDDefault {
	return &PatchVpcsIDDefault{
		_statusCode: code,
	}
}

/*PatchVpcsIDDefault handles this case with default header values.

unexpectederror
*/
type PatchVpcsIDDefault struct {
	_statusCode int

	Payload *models.Riaaserror
}

// Code gets the status code for the patch vpcs ID default response
func (o *PatchVpcsIDDefault) Code() int {
	return o._statusCode
}

func (o *PatchVpcsIDDefault) Error() string {
	return fmt.Sprintf("[PATCH /vpcs/{id}][%d] PatchVpcsID default  %+v", o._statusCode, o.Payload)
}

func (o *PatchVpcsIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
