// Code generated by go-swagger; DO NOT EDIT.

package network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.ibm.com/riaas/rias-api/riaas/models"
)

// DeleteSecurityGroupsIDReader is a Reader for the DeleteSecurityGroupsID structure.
type DeleteSecurityGroupsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSecurityGroupsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteSecurityGroupsIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewDeleteSecurityGroupsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDeleteSecurityGroupsIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		
		return nil, result
	}
}

// NewDeleteSecurityGroupsIDNoContent creates a DeleteSecurityGroupsIDNoContent with default headers values
func NewDeleteSecurityGroupsIDNoContent() *DeleteSecurityGroupsIDNoContent {
	return &DeleteSecurityGroupsIDNoContent{}
}

/*DeleteSecurityGroupsIDNoContent handles this case with default header values.

error
*/
type DeleteSecurityGroupsIDNoContent struct {
	Payload *models.Riaaserror
}

func (o *DeleteSecurityGroupsIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /security_groups/{id}][%d] deleteSecurityGroupsIdNoContent  %+v", 204, o.Payload)
}

func (o *DeleteSecurityGroupsIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSecurityGroupsIDNotFound creates a DeleteSecurityGroupsIDNotFound with default headers values
func NewDeleteSecurityGroupsIDNotFound() *DeleteSecurityGroupsIDNotFound {
	return &DeleteSecurityGroupsIDNotFound{}
}

/*DeleteSecurityGroupsIDNotFound handles this case with default header values.

error
*/
type DeleteSecurityGroupsIDNotFound struct {
	Payload *models.Riaaserror
}

func (o *DeleteSecurityGroupsIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /security_groups/{id}][%d] deleteSecurityGroupsIdNotFound  %+v", 404, o.Payload)
}

func (o *DeleteSecurityGroupsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSecurityGroupsIDDefault creates a DeleteSecurityGroupsIDDefault with default headers values
func NewDeleteSecurityGroupsIDDefault(code int) *DeleteSecurityGroupsIDDefault {
	return &DeleteSecurityGroupsIDDefault{
		_statusCode: code,
	}
}

/*DeleteSecurityGroupsIDDefault handles this case with default header values.

unexpectederror
*/
type DeleteSecurityGroupsIDDefault struct {
	_statusCode int

	Payload *models.Riaaserror
}

// Code gets the status code for the delete security groups ID default response
func (o *DeleteSecurityGroupsIDDefault) Code() int {
	return o._statusCode
}

func (o *DeleteSecurityGroupsIDDefault) Error() string {
	return fmt.Sprintf("[DELETE /security_groups/{id}][%d] DeleteSecurityGroupsID default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteSecurityGroupsIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
