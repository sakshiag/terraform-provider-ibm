// Code generated by go-swagger; DO NOT EDIT.

package network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.ibm.com/riaas/rias-api/riaas/models"
)

// GetVpcsReader is a Reader for the GetVpcs structure.
type GetVpcsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVpcsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetVpcsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetVpcsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		
		return nil, result
	}
}

// NewGetVpcsOK creates a GetVpcsOK with default headers values
func NewGetVpcsOK() *GetVpcsOK {
	return &GetVpcsOK{}
}

/*GetVpcsOK handles this case with default header values.

dummy
*/
type GetVpcsOK struct {
	Payload *models.GetVpcsOKBody
}

func (o *GetVpcsOK) Error() string {
	return fmt.Sprintf("[GET /vpcs][%d] getVpcsOK  %+v", 200, o.Payload)
}

func (o *GetVpcsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetVpcsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVpcsDefault creates a GetVpcsDefault with default headers values
func NewGetVpcsDefault(code int) *GetVpcsDefault {
	return &GetVpcsDefault{
		_statusCode: code,
	}
}

/*GetVpcsDefault handles this case with default header values.

unexpectederror
*/
type GetVpcsDefault struct {
	_statusCode int

	Payload *models.Riaaserror
}

// Code gets the status code for the get vpcs default response
func (o *GetVpcsDefault) Code() int {
	return o._statusCode
}

func (o *GetVpcsDefault) Error() string {
	return fmt.Sprintf("[GET /vpcs][%d] GetVpcs default  %+v", o._statusCode, o.Payload)
}

func (o *GetVpcsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
