// Code generated by go-swagger; DO NOT EDIT.

package network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.ibm.com/riaas/rias-api/riaas/models"
)

// PatchVpcsVpcIDAddressPrefixesIDReader is a Reader for the PatchVpcsVpcIDAddressPrefixesID structure.
type PatchVpcsVpcIDAddressPrefixesIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchVpcsVpcIDAddressPrefixesIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPatchVpcsVpcIDAddressPrefixesIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPatchVpcsVpcIDAddressPrefixesIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchVpcsVpcIDAddressPrefixesIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPatchVpcsVpcIDAddressPrefixesIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		
		return nil, result
	}
}

// NewPatchVpcsVpcIDAddressPrefixesIDOK creates a PatchVpcsVpcIDAddressPrefixesIDOK with default headers values
func NewPatchVpcsVpcIDAddressPrefixesIDOK() *PatchVpcsVpcIDAddressPrefixesIDOK {
	return &PatchVpcsVpcIDAddressPrefixesIDOK{}
}

/*PatchVpcsVpcIDAddressPrefixesIDOK handles this case with default header values.

The prefix was updated successfully.
*/
type PatchVpcsVpcIDAddressPrefixesIDOK struct {
	Payload *models.AddressPoolPrefix
}

func (o *PatchVpcsVpcIDAddressPrefixesIDOK) Error() string {
	return fmt.Sprintf("[PATCH /vpcs/{vpc_id}/address_prefixes/{id}][%d] patchVpcsVpcIdAddressPrefixesIdOK  %+v", 200, o.Payload)
}

func (o *PatchVpcsVpcIDAddressPrefixesIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AddressPoolPrefix)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchVpcsVpcIDAddressPrefixesIDBadRequest creates a PatchVpcsVpcIDAddressPrefixesIDBadRequest with default headers values
func NewPatchVpcsVpcIDAddressPrefixesIDBadRequest() *PatchVpcsVpcIDAddressPrefixesIDBadRequest {
	return &PatchVpcsVpcIDAddressPrefixesIDBadRequest{}
}

/*PatchVpcsVpcIDAddressPrefixesIDBadRequest handles this case with default header values.

An invalid prefix patch was provided.
*/
type PatchVpcsVpcIDAddressPrefixesIDBadRequest struct {
	Payload *models.Riaaserror
}

func (o *PatchVpcsVpcIDAddressPrefixesIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /vpcs/{vpc_id}/address_prefixes/{id}][%d] patchVpcsVpcIdAddressPrefixesIdBadRequest  %+v", 400, o.Payload)
}

func (o *PatchVpcsVpcIDAddressPrefixesIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchVpcsVpcIDAddressPrefixesIDNotFound creates a PatchVpcsVpcIDAddressPrefixesIDNotFound with default headers values
func NewPatchVpcsVpcIDAddressPrefixesIDNotFound() *PatchVpcsVpcIDAddressPrefixesIDNotFound {
	return &PatchVpcsVpcIDAddressPrefixesIDNotFound{}
}

/*PatchVpcsVpcIDAddressPrefixesIDNotFound handles this case with default header values.

A prefix with the specified identifier could not be found.
*/
type PatchVpcsVpcIDAddressPrefixesIDNotFound struct {
	Payload *models.Riaaserror
}

func (o *PatchVpcsVpcIDAddressPrefixesIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /vpcs/{vpc_id}/address_prefixes/{id}][%d] patchVpcsVpcIdAddressPrefixesIdNotFound  %+v", 404, o.Payload)
}

func (o *PatchVpcsVpcIDAddressPrefixesIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchVpcsVpcIDAddressPrefixesIDDefault creates a PatchVpcsVpcIDAddressPrefixesIDDefault with default headers values
func NewPatchVpcsVpcIDAddressPrefixesIDDefault(code int) *PatchVpcsVpcIDAddressPrefixesIDDefault {
	return &PatchVpcsVpcIDAddressPrefixesIDDefault{
		_statusCode: code,
	}
}

/*PatchVpcsVpcIDAddressPrefixesIDDefault handles this case with default header values.

unexpectederror
*/
type PatchVpcsVpcIDAddressPrefixesIDDefault struct {
	_statusCode int

	Payload *models.Riaaserror
}

// Code gets the status code for the patch vpcs vpc ID address prefixes ID default response
func (o *PatchVpcsVpcIDAddressPrefixesIDDefault) Code() int {
	return o._statusCode
}

func (o *PatchVpcsVpcIDAddressPrefixesIDDefault) Error() string {
	return fmt.Sprintf("[PATCH /vpcs/{vpc_id}/address_prefixes/{id}][%d] PatchVpcsVpcIDAddressPrefixesID default  %+v", o._statusCode, o.Payload)
}

func (o *PatchVpcsVpcIDAddressPrefixesIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
