// Code generated by go-swagger; DO NOT EDIT.

package network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.ibm.com/riaas/rias-api/riaas/models"
)

// GetNetworkAclsNetworkACLIDRulesIDReader is a Reader for the GetNetworkAclsNetworkACLIDRulesID structure.
type GetNetworkAclsNetworkACLIDRulesIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNetworkAclsNetworkACLIDRulesIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetNetworkAclsNetworkACLIDRulesIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetNetworkAclsNetworkACLIDRulesIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetNetworkAclsNetworkACLIDRulesIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		
		return nil, result
	}
}

// NewGetNetworkAclsNetworkACLIDRulesIDOK creates a GetNetworkAclsNetworkACLIDRulesIDOK with default headers values
func NewGetNetworkAclsNetworkACLIDRulesIDOK() *GetNetworkAclsNetworkACLIDRulesIDOK {
	return &GetNetworkAclsNetworkACLIDRulesIDOK{}
}

/*GetNetworkAclsNetworkACLIDRulesIDOK handles this case with default header values.

dummy
*/
type GetNetworkAclsNetworkACLIDRulesIDOK struct {
	Payload *models.NetworkACLRule
}

func (o *GetNetworkAclsNetworkACLIDRulesIDOK) Error() string {
	return fmt.Sprintf("[GET /network_acls/{network_acl_id}/rules/{id}][%d] getNetworkAclsNetworkAclIdRulesIdOK  %+v", 200, o.Payload)
}

func (o *GetNetworkAclsNetworkACLIDRulesIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetworkACLRule)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworkAclsNetworkACLIDRulesIDNotFound creates a GetNetworkAclsNetworkACLIDRulesIDNotFound with default headers values
func NewGetNetworkAclsNetworkACLIDRulesIDNotFound() *GetNetworkAclsNetworkACLIDRulesIDNotFound {
	return &GetNetworkAclsNetworkACLIDRulesIDNotFound{}
}

/*GetNetworkAclsNetworkACLIDRulesIDNotFound handles this case with default header values.

error
*/
type GetNetworkAclsNetworkACLIDRulesIDNotFound struct {
	Payload *models.Riaaserror
}

func (o *GetNetworkAclsNetworkACLIDRulesIDNotFound) Error() string {
	return fmt.Sprintf("[GET /network_acls/{network_acl_id}/rules/{id}][%d] getNetworkAclsNetworkAclIdRulesIdNotFound  %+v", 404, o.Payload)
}

func (o *GetNetworkAclsNetworkACLIDRulesIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworkAclsNetworkACLIDRulesIDDefault creates a GetNetworkAclsNetworkACLIDRulesIDDefault with default headers values
func NewGetNetworkAclsNetworkACLIDRulesIDDefault(code int) *GetNetworkAclsNetworkACLIDRulesIDDefault {
	return &GetNetworkAclsNetworkACLIDRulesIDDefault{
		_statusCode: code,
	}
}

/*GetNetworkAclsNetworkACLIDRulesIDDefault handles this case with default header values.

unexpectederror
*/
type GetNetworkAclsNetworkACLIDRulesIDDefault struct {
	_statusCode int

	Payload *models.Riaaserror
}

// Code gets the status code for the get network acls network ACL ID rules ID default response
func (o *GetNetworkAclsNetworkACLIDRulesIDDefault) Code() int {
	return o._statusCode
}

func (o *GetNetworkAclsNetworkACLIDRulesIDDefault) Error() string {
	return fmt.Sprintf("[GET /network_acls/{network_acl_id}/rules/{id}][%d] GetNetworkAclsNetworkACLIDRulesID default  %+v", o._statusCode, o.Payload)
}

func (o *GetNetworkAclsNetworkACLIDRulesIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
