// Code generated by go-swagger; DO NOT EDIT.

package network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.ibm.com/riaas/rias-api/riaas/models"
)

// GetNetworkAclsIDReader is a Reader for the GetNetworkAclsID structure.
type GetNetworkAclsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNetworkAclsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetNetworkAclsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetNetworkAclsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetNetworkAclsIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		
		return nil, result
	}
}

// NewGetNetworkAclsIDOK creates a GetNetworkAclsIDOK with default headers values
func NewGetNetworkAclsIDOK() *GetNetworkAclsIDOK {
	return &GetNetworkAclsIDOK{}
}

/*GetNetworkAclsIDOK handles this case with default header values.

dummy
*/
type GetNetworkAclsIDOK struct {
	Payload *models.NetworkACL
}

func (o *GetNetworkAclsIDOK) Error() string {
	return fmt.Sprintf("[GET /network_acls/{id}][%d] getNetworkAclsIdOK  %+v", 200, o.Payload)
}

func (o *GetNetworkAclsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetworkACL)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworkAclsIDNotFound creates a GetNetworkAclsIDNotFound with default headers values
func NewGetNetworkAclsIDNotFound() *GetNetworkAclsIDNotFound {
	return &GetNetworkAclsIDNotFound{}
}

/*GetNetworkAclsIDNotFound handles this case with default header values.

error
*/
type GetNetworkAclsIDNotFound struct {
	Payload *models.Riaaserror
}

func (o *GetNetworkAclsIDNotFound) Error() string {
	return fmt.Sprintf("[GET /network_acls/{id}][%d] getNetworkAclsIdNotFound  %+v", 404, o.Payload)
}

func (o *GetNetworkAclsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworkAclsIDDefault creates a GetNetworkAclsIDDefault with default headers values
func NewGetNetworkAclsIDDefault(code int) *GetNetworkAclsIDDefault {
	return &GetNetworkAclsIDDefault{
		_statusCode: code,
	}
}

/*GetNetworkAclsIDDefault handles this case with default header values.

unexpectederror
*/
type GetNetworkAclsIDDefault struct {
	_statusCode int

	Payload *models.Riaaserror
}

// Code gets the status code for the get network acls ID default response
func (o *GetNetworkAclsIDDefault) Code() int {
	return o._statusCode
}

func (o *GetNetworkAclsIDDefault) Error() string {
	return fmt.Sprintf("[GET /network_acls/{id}][%d] GetNetworkAclsID default  %+v", o._statusCode, o.Payload)
}

func (o *GetNetworkAclsIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
