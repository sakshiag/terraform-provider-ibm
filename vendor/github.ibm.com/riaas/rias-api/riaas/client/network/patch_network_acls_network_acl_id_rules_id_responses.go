// Code generated by go-swagger; DO NOT EDIT.

package network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.ibm.com/riaas/rias-api/riaas/models"
)

// PatchNetworkAclsNetworkACLIDRulesIDReader is a Reader for the PatchNetworkAclsNetworkACLIDRulesID structure.
type PatchNetworkAclsNetworkACLIDRulesIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchNetworkAclsNetworkACLIDRulesIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPatchNetworkAclsNetworkACLIDRulesIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPatchNetworkAclsNetworkACLIDRulesIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchNetworkAclsNetworkACLIDRulesIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPatchNetworkAclsNetworkACLIDRulesIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		
		return nil, result
	}
}

// NewPatchNetworkAclsNetworkACLIDRulesIDOK creates a PatchNetworkAclsNetworkACLIDRulesIDOK with default headers values
func NewPatchNetworkAclsNetworkACLIDRulesIDOK() *PatchNetworkAclsNetworkACLIDRulesIDOK {
	return &PatchNetworkAclsNetworkACLIDRulesIDOK{}
}

/*PatchNetworkAclsNetworkACLIDRulesIDOK handles this case with default header values.

dummy
*/
type PatchNetworkAclsNetworkACLIDRulesIDOK struct {
	Payload *models.NetworkACLRule
}

func (o *PatchNetworkAclsNetworkACLIDRulesIDOK) Error() string {
	return fmt.Sprintf("[PATCH /network_acls/{network_acl_id}/rules/{id}][%d] patchNetworkAclsNetworkAclIdRulesIdOK  %+v", 200, o.Payload)
}

func (o *PatchNetworkAclsNetworkACLIDRulesIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetworkACLRule)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchNetworkAclsNetworkACLIDRulesIDBadRequest creates a PatchNetworkAclsNetworkACLIDRulesIDBadRequest with default headers values
func NewPatchNetworkAclsNetworkACLIDRulesIDBadRequest() *PatchNetworkAclsNetworkACLIDRulesIDBadRequest {
	return &PatchNetworkAclsNetworkACLIDRulesIDBadRequest{}
}

/*PatchNetworkAclsNetworkACLIDRulesIDBadRequest handles this case with default header values.

error
*/
type PatchNetworkAclsNetworkACLIDRulesIDBadRequest struct {
	Payload *models.Riaaserror
}

func (o *PatchNetworkAclsNetworkACLIDRulesIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /network_acls/{network_acl_id}/rules/{id}][%d] patchNetworkAclsNetworkAclIdRulesIdBadRequest  %+v", 400, o.Payload)
}

func (o *PatchNetworkAclsNetworkACLIDRulesIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchNetworkAclsNetworkACLIDRulesIDNotFound creates a PatchNetworkAclsNetworkACLIDRulesIDNotFound with default headers values
func NewPatchNetworkAclsNetworkACLIDRulesIDNotFound() *PatchNetworkAclsNetworkACLIDRulesIDNotFound {
	return &PatchNetworkAclsNetworkACLIDRulesIDNotFound{}
}

/*PatchNetworkAclsNetworkACLIDRulesIDNotFound handles this case with default header values.

error
*/
type PatchNetworkAclsNetworkACLIDRulesIDNotFound struct {
	Payload *models.Riaaserror
}

func (o *PatchNetworkAclsNetworkACLIDRulesIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /network_acls/{network_acl_id}/rules/{id}][%d] patchNetworkAclsNetworkAclIdRulesIdNotFound  %+v", 404, o.Payload)
}

func (o *PatchNetworkAclsNetworkACLIDRulesIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchNetworkAclsNetworkACLIDRulesIDDefault creates a PatchNetworkAclsNetworkACLIDRulesIDDefault with default headers values
func NewPatchNetworkAclsNetworkACLIDRulesIDDefault(code int) *PatchNetworkAclsNetworkACLIDRulesIDDefault {
	return &PatchNetworkAclsNetworkACLIDRulesIDDefault{
		_statusCode: code,
	}
}

/*PatchNetworkAclsNetworkACLIDRulesIDDefault handles this case with default header values.

unexpectederror
*/
type PatchNetworkAclsNetworkACLIDRulesIDDefault struct {
	_statusCode int

	Payload *models.Riaaserror
}

// Code gets the status code for the patch network acls network ACL ID rules ID default response
func (o *PatchNetworkAclsNetworkACLIDRulesIDDefault) Code() int {
	return o._statusCode
}

func (o *PatchNetworkAclsNetworkACLIDRulesIDDefault) Error() string {
	return fmt.Sprintf("[PATCH /network_acls/{network_acl_id}/rules/{id}][%d] PatchNetworkAclsNetworkACLIDRulesID default  %+v", o._statusCode, o.Payload)
}

func (o *PatchNetworkAclsNetworkACLIDRulesIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
