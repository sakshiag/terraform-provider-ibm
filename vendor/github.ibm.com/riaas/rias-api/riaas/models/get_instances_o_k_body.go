// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// GetInstancesOKBody instanceCollection
// swagger:model getInstancesOKBody
type GetInstancesOKBody struct {
	Pagination

	// Collection of instances
	Instances []*Instance `json:"instances"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *GetInstancesOKBody) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 Pagination
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.Pagination = aO0

	// now for regular properties
	var propsGetInstancesOKBody struct {
		Instances []*Instance `json:"instances"`
	}
	if err := swag.ReadJSON(raw, &propsGetInstancesOKBody); err != nil {
		return err
	}
	m.Instances = propsGetInstancesOKBody.Instances

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m GetInstancesOKBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	aO0, err := swag.WriteJSON(m.Pagination)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	// now for regular properties
	var propsGetInstancesOKBody struct {
		Instances []*Instance `json:"instances"`
	}
	propsGetInstancesOKBody.Instances = m.Instances

	jsonDataPropsGetInstancesOKBody, errGetInstancesOKBody := swag.WriteJSON(propsGetInstancesOKBody)
	if errGetInstancesOKBody != nil {
		return nil, errGetInstancesOKBody
	}
	_parts = append(_parts, jsonDataPropsGetInstancesOKBody)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get instances o k body
func (m *GetInstancesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with Pagination
	if err := m.Pagination.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateInstances(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetInstancesOKBody) validateInstances(formats strfmt.Registry) error {

	if swag.IsZero(m.Instances) { // not required
		return nil
	}

	for i := 0; i < len(m.Instances); i++ {
		if swag.IsZero(m.Instances[i]) { // not required
			continue
		}

		if m.Instances[i] != nil {
			if err := m.Instances[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("instances" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetInstancesOKBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetInstancesOKBody) UnmarshalBinary(b []byte) error {
	var res GetInstancesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
